# Deployment for the service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helpers.fullname" . }}
  labels:
    {{- include "helpers.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaler }}
  replicas: 1
{{- end }}
  selector:
    matchLabels:
      {{- include "helpers.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        psl-repository: "https://dev.azure.com/positivesolutions/Hx/_git/PSL.EmailService"
      labels:
        {{- include "helpers.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
        - name: acr-psl-prod-image-pull-secret
      serviceAccountName: {{ include "helpers.serviceAccountName" . }}
#      securityContext:
#        fsGroup: 2000
      containers:
        - name: {{ .Chart.Name }}
#          securityContext:
#            capabilities:
#              drop:
#              - ALL
#            readOnlyRootFilesystem: true
#            runAsNonRoot: true
#            runAsUser: 1000
          image: "{{ include "helpers.registry" . }}{{ .Chart.Name }}:{{ .Values.apiTag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: https
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/
              port: https
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /health/
              scheme: HTTPS
              port: https
#          resources:
# TODO: specify initial and maximum resources after performance profiling
#            limits:
# maximum compute resources allowed.
#              cpu: 100m
#              memory: 128Mi
#            requests:
# compute resources requested. If not set, will default to values specified in limits
#              cpu: 100m
#              memory: 128Mi
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: {{ .Values.environment }}
            - name: Kestrel__Endpoints__Https__Url
              value: https://{{ .Chart.Name }}:{{- .Values.containerPort }}
            - name: Serilog__WriteTo__0__Args__connectionGlobalHeaders
              value: {{ .Values.elasticAuth }}
            - name: Serilog__WriteTo__0__Args__nodeUris
              value: {{ .Values.elasticUrl }}
            - name: Serilog__Properties__NameSpace
              value: {{ .Values.nameSpace }}
            - name: Serilog__Properties__Environment
              value: {{ .Values.environment }}
          volumeMounts:
          - mountPath: "/mnt/secrets-store"
            name: secrets-store-inline
            readOnly: true
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ include "helpers.fullname" . }}
          nodePublishSecretRef: 
            name: secrets-store-creds

#      nodeSelector:
#      affinity:
#      tolerations:
